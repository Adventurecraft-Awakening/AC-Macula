plugins {
	id "maven-publish"
	id "fabric-loom" version "1.10.1"
	id "babric-loom-extension" version "1.10.1"
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

loom {
}

repositories {
	// Used for Nostalgia mappings.
	maven {
		name = "Wisp Forest"
		url = "https://maven.wispforest.io"
	}

	// Used for Brigadier.
	maven {
		name = "Mojang"
		url = "https://libraries.minecraft.net"
	}

	// Used for projects without a maven, but on GitHub repos with working build scripts.
	maven {
		name = "Jitpack"
		url = "https://jitpack.io"
	}
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "me.alphamode:nostalgia:${project.nostalgia_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	implementation "org.slf4j:slf4j-api:1.8.0-beta4"
	implementation "org.apache.logging.log4j:log4j-slf4j18-impl:2.18.0"
}

processResources {
	filesMatching("fabric.mod.json") {
		expand project.properties
	}
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and
	// to the "build" task if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = targetCompatibility = JavaVersion.VERSION_23
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}" }
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}